@page "/edit/blog/{id}"
@inject BlogsController service
@inject NavigationManager router




<div class="col-12 col-md-6 col-lg-6">
    <EditForm Model="@model" class="card" OnSubmit="Add">
        <div class="card-header">
            <h4>Edit Post</h4>
        </div>
        <div class="card-body">
            @if (@Path != null)
            {
                <div class="form-group">
                    <img src="@Path" style="height:300px;width:300px;" type="text" class="form-control shadow-dark" />
                </div>
            }
            <div class="form-group">
                <InputFile OnChange="Upload" type="file" class="form-control" />
            </div>
            <div class="form-group">
                <InputText @bind-Value="@model.Title" placeholder="Enter  Title" type="text" class="form-control" />
            </div>
            <div class="form-group">
                <InputTextArea  @bind-Value="@model.Body" placeholder="Enter Message" type="text" class="form-control" />
            </div>
            <div class="form-group" align="center">
                <button type="submit" class="btn btn-primary w-50">Submit</button>
            </div>
        </div>
    </EditForm>
</div>


@code {
    [Parameter]
    public string id { get; set; }
    public Blog model = new();
    public string Path;

    protected override async Task OnInitializedAsync()
    {
        model = await service.GetBlog(int.Parse(id));
        Path = model.ImagePath;
    }

    public async Task Add()
    {
        await service.PostBlog(model);
        router.NavigateTo("/admin/blog");
    }

    public async Task Upload(InputFileChangeEventArgs args)
    {
        var file = args.File;
        var stream = file.OpenReadStream(20000000);
        var path = $"wwwroot\\StaticFiles\\{file.Name}";
        model.ImagePath = path;
        var fs = File.Create(path);
        await stream.CopyToAsync(fs);
        stream.Close(); fs.Close();
        Path = $"/wwwroot/StaticFiles/{file.Name}";


    }


}
